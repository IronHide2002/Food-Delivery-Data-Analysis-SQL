# Food Delivery Database

## Overview

The Food Delivery Database is designed to manage user signups, sales transactions, and product details for a food delivery service. This project includes SQL scripts to create and populate the database, as well as sample queries for data analysis.

## Database Structure

The database consists of four main tables:

1. **goldusers_signup**: Tracks gold membership signups
2. **users**: Stores general user information
3. **sales**: Records sales transactions
4. **product**: Contains product details and pricing

## Files in this Repository

- `Fooddel_Table_Values.sql`: Contains the SQL commands to create tables and insert data into the database.
- `Food_Delievry_Queries.sql`: Includes sample queries for data analysis.

## Getting Started

### Prerequisites

- MySQL or compatible SQL database management system

### Setting Up the Database

1. Create the database:
   ```sql
   CREATE DATABASE fooddel;
   USE fooddel;
   ```

2. Run the SQL commands in the `Fooddel_Table_Values.sql` file to create tables and insert data.

## Sample Queries

The `Food_Delievry_Queries.sql` file contains several sample queries for data analysis. Here are the queries along with their purposes:

1. **Total Amount Spent by Each Customer**
   ```sql
   SELECT s.userid, SUM(p.price) AS total_amt_spent
   FROM sales s
   JOIN product p ON s.product_id = p.product_id
   GROUP BY s.userid;
   ```
   This query calculates the total amount spent by each customer across all their purchases.

2. **Count Distinct Days Each Customer Visited**
   ```sql
   SELECT userid, COUNT(DISTINCT created_date) AS distinct_days
   FROM sales 
   GROUP BY userid;
   ```
   This query counts the number of unique days each customer made a purchase.

3. **First Product Purchased by Each Customer**
   ```sql
   SELECT *
   FROM (
       SELECT *, RANK() OVER (PARTITION BY userid ORDER BY created_date) AS rnk
       FROM sales
   ) s
   WHERE rnk = 1;
   ```
   This query identifies the first product each customer purchased.

4. **Most Purchased Product Overall**
   ```sql
   SELECT userid, COUNT(product_id) AS cnt 
   FROM sales 
   WHERE product_id = (
       SELECT product_id 
       FROM sales 
       GROUP BY product_id 
       ORDER BY COUNT(product_id) DESC
       LIMIT 1
   ) 
   GROUP BY userid;
   ```
   This query finds the most frequently purchased product and shows how many times each user bought it.

5. **Most Popular Product for Each Customer**
   ```sql
   SELECT * 
   FROM (
       SELECT *, RANK() OVER (PARTITION BY userid ORDER BY cnt DESC) AS rnk
       FROM (
           SELECT userid, product_id, COUNT(product_id) AS cnt 
           FROM sales
           GROUP BY userid, product_id
       ) s
   ) s1
   WHERE rnk = 1;
   ```
   This query determines the most popular product for each individual customer.

## Usage

To use this database and run the sample queries:

1. Set up the database using the `Fooddel_Table_Values.sql` file.
2. Connect to your database using your preferred SQL client.
3. Run the queries from `Food_Delievry_Queries.sql` or create your own to analyze the data.

## Contributing

Contributions to improve the database schema, add more sample data, or create additional analytical queries are welcome. Please feel free to fork this repository and submit pull requests.

## License

This project is open-source and available under the [MIT License](LICENSE).

## Contact

For any questions or suggestions regarding this project, please open an issue in the GitHub repository.
